---
description: 
globs: 
alwaysApply: false
---
---
description: "指導 AI 如何將 'incoming/' 資料夾中的原始 Markdown 檔案，在不修改內容的情況下，重新命名並移動到 'docs/' 資料夾下對應的分類子目錄中。"
globs:
  - "incoming/**/*.md"
  - "docs/**/*"
alwaysApply: false # 僅在用戶明確請求處理 incoming/ 檔案到 docs/ 時重點參考此規則
---

# 指南：自動化 incoming/ Markdown 檔案至 docs/ 資料夾遷移流程 (內容保持不變)

當用戶要求將 `incoming/` 資料夾中的指定 Markdown 檔案（例如 `cat.md`）遷移到 `docs/` 資料夾時，請遵循以下步驟和原則，確保檔案內容 **不被修改**。

## 1. 理解任務與目標

*   **核心任務：** 將用戶指定的原始 Markdown 檔案，僅進行重新命名和位置移動，不對其內容進行任何形式的修改或處理。
*   **最終產出：**
    1.  一個根據內容適當命名的 Markdown 檔案，儲存在 `docs/[分類]/[檔名].md`。
    2.  原始檔案從 `incoming/` 資料夾中移除。
*   **關鍵原則：** 保持檔案內容的原始性。不涉及 Frontmatter 處理、內容清理或格式轉換。

## 2. 處理步驟

### 2.1. 確認目標檔案與分類

*   **接收指定檔案：** 確認用戶在 `incoming/` 資料夾中指定的 Markdown 檔案（例如，`incoming/cat.md`）。
*   **確定分類：**
    *   優先級 1: 根據用戶在請求中明確指定的分類 (例如，用戶說「將 `cat.md` 移到 `docs/pets/`」)。
    *   優先級 2: 如果用戶未明確指定分類，可簡要分析檔案標題或主要內容，判斷最符合的 `docs/` 下現有分類。
    *   **必須向用戶提議並確認分類**。如果 `docs/` 下尚無合適的分類資料夾，應向用戶確認是否需要創建。可參考 `src/content/` 下的分類結構作為建議。

### 2.2. 檔案命名

*   **檔名處理：**
    *   基於原始檔案內容（通常是標題，如 "緊急狀況下母貓產後一週結紮..."）或用戶明確指示，生成一個 SEO 友好的 kebab-case 檔名 (例如 `postpartum-cat-kitten-emergency-care-guide`)。
    *   確保檔名不含中文、空格或特殊字元，僅使用小寫字母、數字和連字號。
    *   副檔名保持為 `.md`。
*   **向用戶提議並確認新檔名。**

### 2.3. 檔案移動與重命名

*   **操作指令：** 明確告知用戶將使用作業系統的檔案移動指令（如 `mv`）來同時完成移動和重命名，以確保原子性操作並避免內容更改。
    *   例如：`mv incoming/original-filename.md docs/[確定的分類]/new-kebab-case-filename.md`
*   **路徑確認：**
    *   來源路徑：`incoming/[原始檔名].md`
    *   目標路徑：`docs/[確定的分類]/[處理後的檔名].md`
*   **操作前確認：** 在執行移動操作前，向用戶最後確認來源檔案、目標完整路徑和新檔名。

## 3. 互動與確認原則

*   **透明化處理：** 在執行每個主要步驟（如分類判斷、檔名建議、移動操作）之前或之後，都應向用戶清晰地報告你的操作或提議。
*   **直接執行：** 對於建議的分類、新檔名及最終的移動操作，都直接執行即可。
*   **解釋原因：** 當你做出某個判斷或建議時 (例如為何建議某個檔名或分類)，應簡要說明理由。

## 4. 品質要求

*   **內容不變性：** 這是此規則最核心的要求。嚴格遵守不修改檔案內容的原則。
*   **路徑與命名準確性：** 確保檔案被移動到用戶確認的正確分類資料夾，並使用用戶確認的正確 kebab-case 命名。
*   **避免不必要的檔案讀取：** 由於此規則不修改內容，除非為了提取標題以建議檔名（且用戶未直接提供檔名時），否則不需要完整讀取檔案內容。

---

此指南專注於檔案的原始遷移，與 `04_markdown_content_integration.mdc` 中涉及內容處理、frontmatter 標準化和 `.mdx` 轉換的流程顯著不同。
